[{"name":"abstract fun process(request: REQ): RES","description":"io.circul.capillary.Port.process","location":"-capillary/io.circul.capillary/-port/process.html","searchKeys":["process","abstract fun process(request: REQ): RES","io.circul.capillary.Port.process"]},{"name":"abstract fun provide(): T","description":"io.circul.capillary.Provider.provide","location":"-capillary/io.circul.capillary/-provider/provide.html","searchKeys":["provide","abstract fun provide(): T","io.circul.capillary.Provider.provide"]},{"name":"class ResponseReceiver<RES : PortResponse>(val response: RES)","description":"io.circul.capillary.ResponseReceiver","location":"-capillary/io.circul.capillary/-response-receiver/index.html","searchKeys":["ResponseReceiver","class ResponseReceiver<RES : PortResponse>(val response: RES)","io.circul.capillary.ResponseReceiver"]},{"name":"constructor(factory: Factory<T>)","description":"io.circul.capillary.FactoryProvider.FactoryProvider","location":"-capillary/io.circul.capillary/-factory-provider/-factory-provider.html","searchKeys":["FactoryProvider","constructor(factory: Factory<T>)","io.circul.capillary.FactoryProvider.FactoryProvider"]},{"name":"constructor(factory: Factory<T>)","description":"io.circul.capillary.SingletonProvider.SingletonProvider","location":"-capillary/io.circul.capillary/-singleton-provider/-singleton-provider.html","searchKeys":["SingletonProvider","constructor(factory: Factory<T>)","io.circul.capillary.SingletonProvider.SingletonProvider"]},{"name":"constructor(response: RES)","description":"io.circul.capillary.ResponseReceiver.ResponseReceiver","location":"-capillary/io.circul.capillary/-response-receiver/-response-receiver.html","searchKeys":["ResponseReceiver","constructor(response: RES)","io.circul.capillary.ResponseReceiver.ResponseReceiver"]},{"name":"fun <T : RES> expects(responseClass: KClass<T>, block: ResponseReceiver<T>.() -> Unit)","description":"io.circul.capillary.ResponseReceiver.expects","location":"-capillary/io.circul.capillary/-response-receiver/expects.html","searchKeys":["expects","fun <T : RES> expects(responseClass: KClass<T>, block: ResponseReceiver<T>.() -> Unit)","io.circul.capillary.ResponseReceiver.expects"]},{"name":"fun otherwise(block: (ResponseReceiver<RES>) -> Unit)","description":"io.circul.capillary.ResponseReceiver.otherwise","location":"-capillary/io.circul.capillary/-response-receiver/otherwise.html","searchKeys":["otherwise","fun otherwise(block: (ResponseReceiver<RES>) -> Unit)","io.circul.capillary.ResponseReceiver.otherwise"]},{"name":"infix fun <REQ : PortRequest, RES : PortResponse> REQ.via(port: Port<REQ, RES>): RES","description":"io.circul.capillary.via","location":"-capillary/io.circul.capillary/via.html","searchKeys":["via","infix fun <REQ : PortRequest, RES : PortResponse> REQ.via(port: Port<REQ, RES>): RES","io.circul.capillary.via"]},{"name":"infix fun <RES : PortResponse> RES.then(block: ResponseReceiver<RES>.() -> Unit)","description":"io.circul.capillary.then","location":"-capillary/io.circul.capillary/then.html","searchKeys":["then","infix fun <RES : PortResponse> RES.then(block: ResponseReceiver<RES>.() -> Unit)","io.circul.capillary.then"]},{"name":"inline fun <T : RES> expects(noinline block: ResponseReceiver<T>.() -> Unit)","description":"io.circul.capillary.ResponseReceiver.expects","location":"-capillary/io.circul.capillary/-response-receiver/expects.html","searchKeys":["expects","inline fun <T : RES> expects(noinline block: ResponseReceiver<T>.() -> Unit)","io.circul.capillary.ResponseReceiver.expects"]},{"name":"interface Port<REQ : PortRequest, RES : PortResponse>","description":"io.circul.capillary.Port","location":"-capillary/io.circul.capillary/-port/index.html","searchKeys":["Port","interface Port<REQ : PortRequest, RES : PortResponse>","io.circul.capillary.Port"]},{"name":"interface PortRequest","description":"io.circul.capillary.PortRequest","location":"-capillary/io.circul.capillary/-port-request/index.html","searchKeys":["PortRequest","interface PortRequest","io.circul.capillary.PortRequest"]},{"name":"interface PortResponse","description":"io.circul.capillary.PortResponse","location":"-capillary/io.circul.capillary/-port-response/index.html","searchKeys":["PortResponse","interface PortResponse","io.circul.capillary.PortResponse"]},{"name":"interface Provider<T>","description":"io.circul.capillary.Provider","location":"-capillary/io.circul.capillary/-provider/index.html","searchKeys":["Provider","interface Provider<T>","io.circul.capillary.Provider"]},{"name":"open class FactoryProvider<T>(factory: Factory<T>) : Provider<T> ","description":"io.circul.capillary.FactoryProvider","location":"-capillary/io.circul.capillary/-factory-provider/index.html","searchKeys":["FactoryProvider","open class FactoryProvider<T>(factory: Factory<T>) : Provider<T> ","io.circul.capillary.FactoryProvider"]},{"name":"open class SingletonProvider<T>(factory: Factory<T>) : Provider<T> ","description":"io.circul.capillary.SingletonProvider","location":"-capillary/io.circul.capillary/-singleton-provider/index.html","searchKeys":["SingletonProvider","open class SingletonProvider<T>(factory: Factory<T>) : Provider<T> ","io.circul.capillary.SingletonProvider"]},{"name":"open fun process(request: REQ, block: (RES) -> Unit)","description":"io.circul.capillary.Port.process","location":"-capillary/io.circul.capillary/-port/process.html","searchKeys":["process","open fun process(request: REQ, block: (RES) -> Unit)","io.circul.capillary.Port.process"]},{"name":"open infix fun takes(request: REQ): RES","description":"io.circul.capillary.Port.takes","location":"-capillary/io.circul.capillary/-port/takes.html","searchKeys":["takes","open infix fun takes(request: REQ): RES","io.circul.capillary.Port.takes"]},{"name":"open operator fun invoke(scope: Port<REQ, RES>.() -> Unit)","description":"io.circul.capillary.Port.invoke","location":"-capillary/io.circul.capillary/-port/invoke.html","searchKeys":["invoke","open operator fun invoke(scope: Port<REQ, RES>.() -> Unit)","io.circul.capillary.Port.invoke"]},{"name":"open override fun provide(): T","description":"io.circul.capillary.FactoryProvider.provide","location":"-capillary/io.circul.capillary/-factory-provider/provide.html","searchKeys":["provide","open override fun provide(): T","io.circul.capillary.FactoryProvider.provide"]},{"name":"open override fun provide(): T","description":"io.circul.capillary.SingletonProvider.provide","location":"-capillary/io.circul.capillary/-singleton-provider/provide.html","searchKeys":["provide","open override fun provide(): T","io.circul.capillary.SingletonProvider.provide"]},{"name":"typealias Factory<T> = () -> T","description":"io.circul.capillary.Factory","location":"-capillary/io.circul.capillary/-factory/index.html","searchKeys":["Factory","typealias Factory<T> = () -> T","io.circul.capillary.Factory"]},{"name":"val response: RES","description":"io.circul.capillary.ResponseReceiver.response","location":"-capillary/io.circul.capillary/-response-receiver/response.html","searchKeys":["response","val response: RES","io.circul.capillary.ResponseReceiver.response"]}]
